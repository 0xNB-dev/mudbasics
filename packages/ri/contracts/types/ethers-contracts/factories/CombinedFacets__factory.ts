/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { CombinedFacets, CombinedFacetsInterface } from "../CombinedFacets";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spellEntityID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sourceEntityID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetEntityID",
        type: "uint256",
      },
    ],
    name: "castSpell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "component",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "addComponentToEntityExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callerEntityID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "component",
        type: "address",
      },
    ],
    name: "removeComponentFromEntityExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "resetCallerEntityID",
            type: "bool",
          },
          {
            internalType: "address",
            name: "personaMirror",
            type: "address",
          },
        ],
        internalType: "struct Config",
        name: "config",
        type: "tuple",
      },
    ],
    name: "initializeExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "accessControllerAddr",
        type: "address",
      },
    ],
    name: "registerAccessControllerExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contentCreatorAddr",
        type: "address",
      },
    ],
    name: "registerContentCreatorExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "embodiedSystemAddr",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "registerEmbodiedSystemExternally",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class CombinedFacets__factory {
  static readonly abi = _abi;
  static createInterface(): CombinedFacetsInterface {
    return new utils.Interface(_abi) as CombinedFacetsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CombinedFacets {
    return new Contract(address, _abi, signerOrProvider) as CombinedFacets;
  }
}
