/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PositionComponent, PositionComponentInterface } from "../PositionComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "position",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023403803806200234083398101604081905262000034916200014f565b600080546001600160a01b0319166001600160a01b038316908117909155819063f303477030620000827ff2b6dccd2b727ad73194b365dd7ad2c6b1e96e25269352f5a0a3b0fa694445e290565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015620000c957600080fd5b505af1158015620000de573d6000803e3d6000fd5b50505050604051620000f09062000141565b604051809103906000f0801580156200010d573d6000803e3d6000fd5b50600280546001600160a01b03929092166001600160a01b0319928316179055600180549091163317905550620001819050565b6104388062001f0883390190565b6000602082840312156200016257600080fd5b81516001600160a01b03811681146200017a57600080fd5b9392505050565b611d7780620001916000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063b8bc073d11610066578063b8bc073d1461022b578063cccf7a8e1461024b578063f2fde38b1461026e578063fd4ab6d81461028157600080fd5b80638da5cb5b146101ca578063ab9dbd07146101ea578063b361be461461021857600080fd5b80634cc82215116100c85780634cc822151461017c57806375c0669c146101915780638b282947146101a45780638bbf68fe146101b757600080fd5b80630ff4c916146100ef57806330b67baa1461012257806331b933b914610167575b600080fd5b6101026100fd3660046112ec565b610294565b604080518251815260209283015192810192909252015b60405180910390f35b6000546101429073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b61016f6102e1565b6040516101199190611305565b61018f61018a3660046112ec565b61039c565b005b61018f61019f366004611349565b610707565b61018f6101b236600461148b565b61088f565b61018f6101c53660046114ea565b610c92565b6001546101429073ffffffffffffffffffffffffffffffffffffffff1681565b6040517ff2b6dccd2b727ad73194b365dd7ad2c6b1e96e25269352f5a0a3b0fa694445e28152602001610119565b61016f610226366004611517565b610cd1565b61023e6102393660046112ec565b610e0f565b60405161011991906115ce565b61025e6102593660046112ec565b610eb1565b6040519015158152602001610119565b61018f61027c366004611349565b610f45565b61016f61028f3660046115e1565b61100d565b60408051808201909152600080825260208201526000806102b484610e0f565b8060200190518101906102c791906115fd565b604080518082019091529182526020820152949350505050565b600254604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa158015610351573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103979190810190611621565b905090565b60015473ffffffffffffffffffffffffffffffffffffffff163314610422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e45520000000000000000000000000060448201526064015b60405180910390fd5b600081815260046020526040808220905160039161043f91611714565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16146107045760008181526004602052604090819020905160039161048891611714565b908152604051908190036020018120547f4cc8221500000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff1690634cc82215906104ea90849060040190815260200190565b600060405180830381600087803b15801561050457600080fd5b505af1158015610518573d6000803e3d6000fd5b50506002546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b15801561058857600080fd5b505af115801561059c573d6000803e3d6000fd5b50505060008281526004602052604081206105b892509061120c565b60005b60055481101561067857600581815481106105d8576105d86117e6565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b15801561064d57600080fd5b505af1158015610661573d6000803e3d6000fd5b50505050808061067090611815565b9150506105bb565b506000546040517fd803064a0000000000000000000000000000000000000000000000000000000081523060048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063d803064a90604401600060405180830381600087803b1580156106eb57600080fd5b505af11580156106ff573d6000803e3d6000fd5b505050505b50565b60015473ffffffffffffffffffffffffffffffffffffffff163314610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006044820152606401610419565b6107b2817f4ede9a2d00000000000000000000000000000000000000000000000000000000611049565b610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f476976656e2061646472657373206973206e6f7420616e20696e64657865722e6044820152606401610419565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff163314610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006044820152606401610419565b6002546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b15801561097c57600080fd5b505af1158015610990573d6000803e3d6000fd5b505050600083815260046020908152604090912083516109b593509091840190611246565b50600073ffffffffffffffffffffffffffffffffffffffff166003826040516109de9190611874565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1603610a9757604051610a15906112ca565b604051809103906000f080158015610a31573d6000803e3d6000fd5b50600382604051610a429190611874565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911790555b600381604051610aa79190611874565b908152604051908190036020018120547f1003e2d200000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff1690631003e2d290610b0990859060040190815260200190565b600060405180830381600087803b158015610b2357600080fd5b505af1158015610b37573d6000803e3d6000fd5b5050505060005b600554811015610c015760058181548110610b5b57610b5b6117e6565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b83890610bbc9086908690600401611890565b600060405180830381600087803b158015610bd657600080fd5b505af1158015610bea573d6000803e3d6000fd5b505050508080610bf990611815565b915050610b3e565b506000546040517faf104e4000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063af104e4090610c5c903090869086906004016118a9565b600060405180830381600087803b158015610c7657600080fd5b505af1158015610c8a573d6000803e3d6000fd5b505050505050565b610ccd8282604051602001610cb99190813581526020918201359181019190915260400190565b60405160208183030381529060405261088f565b5050565b6060600073ffffffffffffffffffffffffffffffffffffffff16600383604051610cfb9190611874565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1603610d3a57505060408051600081526020810190915290565b600382604051610d4a9190611874565b90815260408051918290036020018220547f410d59cc000000000000000000000000000000000000000000000000000000008352905173ffffffffffffffffffffffffffffffffffffffff9091169163410d59cc9160048083019260009291908290030181865afa158015610dc3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e099190810190611621565b92915050565b6000818152600460205260409020805460609190610e2c906116c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e58906116c7565b8015610ea55780601f10610e7a57610100808354040283529160200191610ea5565b820191906000526020600020905b815481529060010190602001808311610e8857829003601f168201915b50505050509050919050565b6002546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610f21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0991906118e7565b60015473ffffffffffffffffffffffffffffffffffffffff163314610fc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006044820152606401610419565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6060610e09826040516020016110359190813581526020918201359181019190915260400190565b604051602081830303815290604052610cd1565b60006110548361106c565b8015611065575061106583836110d0565b9392505050565b6000611098827f01ffc9a7000000000000000000000000000000000000000000000000000000006110d0565b8015610e0957506110c9827fffffffff000000000000000000000000000000000000000000000000000000006110d0565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff8716906175309061118a908690611874565b6000604051808303818686fa925050503d80600081146111c6576040519150601f19603f3d011682016040523d82523d6000602084013e6111cb565b606091505b50915091506020815110156111e65760009350505050610e09565b81801561120257508080602001905181019061120291906118e7565b9695505050505050565b508054611218906116c7565b6000825580601f10611228575050565b601f01602090049060005260206000209081019061070491906112d7565b828054611252906116c7565b90600052602060002090601f01602090048101928261127457600085556112ba565b82601f1061128d57805160ff19168380011785556112ba565b828001600101855582156112ba579182015b828111156112ba57825182559160200191906001019061129f565b506112c69291506112d7565b5090565b6104388061190a83390190565b5b808211156112c657600081556001016112d8565b6000602082840312156112fe57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561133d57835183529284019291840191600101611321565b50909695505050505050565b60006020828403121561135b57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461106557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113f5576113f561137f565b604052919050565b600082601f83011261140e57600080fd5b813567ffffffffffffffff8111156114285761142861137f565b61145960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016113ae565b81815284602083860101111561146e57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561149e57600080fd5b82359150602083013567ffffffffffffffff8111156114bc57600080fd5b6114c8858286016113fd565b9150509250929050565b6000604082840312156114e457600080fd5b50919050565b600080606083850312156114fd57600080fd5b8235915061150e84602085016114d2565b90509250929050565b60006020828403121561152957600080fd5b813567ffffffffffffffff81111561154057600080fd5b61154c848285016113fd565b949350505050565b60005b8381101561156f578181015183820152602001611557565b8381111561157e576000848401525b50505050565b6000815180845261159c816020860160208601611554565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006110656020830184611584565b6000604082840312156115f357600080fd5b61106583836114d2565b6000806040838503121561161057600080fd5b505080516020909101519092909150565b6000602080838503121561163457600080fd5b825167ffffffffffffffff8082111561164c57600080fd5b818501915085601f83011261166057600080fd5b8151818111156116725761167261137f565b8060051b91506116838483016113ae565b818152918301840191848101908884111561169d57600080fd5b938501935b838510156116bb578451825293850193908501906116a2565b98975050505050505050565b600181811c908216806116db57607f821691505b6020821081036114e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080835481600182811c91508083168061173057607f831692505b60208084108203611768577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b81801561177c57600181146117ab576117d8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616895284890196506117d8565b60008a81526020902060005b868110156117d05781548b8201529085019083016117b7565b505084890196505b509498975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361186d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60008251611886818460208701611554565b9190910192915050565b82815260406020820152600061154c6040830184611584565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006118de6060830184611584565b95945050505050565b6000602082840312156118f957600080fd5b8151801515811461106557600080fdfe608060405234801561001057600080fd5b50610418806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634cc82215116100505780634cc822151461009f578063949d225d146100b2578063cccf7a8e146100c357600080fd5b80631003e2d21461006c578063410d59cc14610081575b600080fd5b61007f61007a3660046102e9565b6100e6565b005b610089610138565b6040516100969190610302565b60405180910390f35b61007f6100ad3660046102e9565b610190565b600054604051908152602001610096565b6100d66100d13660046102e9565b610286565b6040519015158152602001610096565b6100ef81610286565b156100f75750565b600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b6060600080548060200260200160405190810160405280929190818152602001828054801561018657602002820191906000526020600020905b815481526020019060010190808311610172575b5050505050905090565b61019981610286565b6101a05750565b600080546101b090600190610346565b815481106101c0576101c0610384565b906000526020600020015460006001600084815260200190815260200160002054815481106101f1576101f1610384565b6000918252602080832090910192909255828152600191829052604081205481549092919081908490811061022857610228610384565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061026d5761026d6103b3565b6001900381819060005260206000200160009055905550565b60008054810361029857506000919050565b60008281526001602052604081205490036102d45781600080815481106102c1576102c1610384565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b6000602082840312156102fb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561033a5783518352928401929184019160010161031e565b50909695505050505050565b60008282101561037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220306162261924bfa673cd43a39edda8526afef2615cf36bb707b4d6df0e25306264736f6c634300080d0033a26469706673582212200a762ebe3f77c45e04d3e6c869dad9d5ca32c5416de723cb3522a69f3430505564736f6c634300080d0033608060405234801561001057600080fd5b50610418806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634cc82215116100505780634cc822151461009f578063949d225d146100b2578063cccf7a8e146100c357600080fd5b80631003e2d21461006c578063410d59cc14610081575b600080fd5b61007f61007a3660046102e9565b6100e6565b005b610089610138565b6040516100969190610302565b60405180910390f35b61007f6100ad3660046102e9565b610190565b600054604051908152602001610096565b6100d66100d13660046102e9565b610286565b6040519015158152602001610096565b6100ef81610286565b156100f75750565b600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b6060600080548060200260200160405190810160405280929190818152602001828054801561018657602002820191906000526020600020905b815481526020019060010190808311610172575b5050505050905090565b61019981610286565b6101a05750565b600080546101b090600190610346565b815481106101c0576101c0610384565b906000526020600020015460006001600084815260200190815260200160002054815481106101f1576101f1610384565b6000918252602080832090910192909255828152600191829052604081205481549092919081908490811061022857610228610384565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061026d5761026d6103b3565b6001900381819060005260206000200160009055905550565b60008054810361029857506000919050565b60008281526001602052604081205490036102d45781600080815481106102c1576102c1610384565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b6000602082840312156102fb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561033a5783518352928401929184019160010161031e565b50909695505050505050565b60008282101561037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220306162261924bfa673cd43a39edda8526afef2615cf36bb707b4d6df0e25306264736f6c634300080d0033";

type PositionComponentConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: PositionComponentConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class PositionComponent__factory extends ContractFactory {
  constructor(...args: PositionComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PositionComponent";
  }

  deploy(world: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<PositionComponent> {
    return super.deploy(world, overrides || {}) as Promise<PositionComponent>;
  }
  getDeployTransaction(world: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  attach(address: string): PositionComponent {
    return super.attach(address) as PositionComponent;
  }
  connect(signer: Signer): PositionComponent__factory {
    return super.connect(signer) as PositionComponent__factory;
  }
  static readonly contractName: "PositionComponent";
  public readonly contractName: "PositionComponent";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionComponentInterface {
    return new utils.Interface(_abi) as PositionComponentInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PositionComponent {
    return new Contract(address, _abi, signerOrProvider) as PositionComponent;
  }
}
