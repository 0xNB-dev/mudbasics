/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DamageComponent, DamageComponentInterface } from "../DamageComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200221d3803806200221d83398101604081905262000034916200014f565b600080546001600160a01b0319166001600160a01b038316908117909155819063f303477030620000827f402b0dae54070a7ad1d820546f3e31228c279870a459486bf6d7eee61e67571890565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015620000c957600080fd5b505af1158015620000de573d6000803e3d6000fd5b50505050604051620000f09062000141565b604051809103906000f0801580156200010d573d6000803e3d6000fd5b50600280546001600160a01b03929092166001600160a01b0319928316179055600180549091163317905550620001819050565b61040f8062001e0e83390190565b6000602082840312156200016257600080fd5b81516001600160a01b03811681146200017a57600080fd5b9392505050565b611c7d80620001916000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063b8bc073d11610066578063b8bc073d14610216578063cccf7a8e14610236578063f2fde38b14610259578063fbdfa1ea1461026c57600080fd5b80638da5cb5b146101bd578063ab9dbd07146101dd578063b361be461461020357600080fd5b806331b933b9116100c857806331b933b91461016f5780634cc822151461018457806375c0669c146101975780638b282947146101aa57600080fd5b80630ff4c916146100ef5780631ab06ee51461011557806330b67baa1461012a575b600080fd5b6101026100fd366004611288565b61027f565b6040519081526020015b60405180910390f35b6101286101233660046112a1565b6102a3565b005b60005461014a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010c565b6101776102d2565b60405161010c91906112c3565b610128610192366004611288565b61038d565b6101286101a5366004611307565b6106f8565b6101286101b8366004611449565b610880565b60015461014a9073ffffffffffffffffffffffffffffffffffffffff1681565b7f402b0dae54070a7ad1d820546f3e31228c279870a459486bf6d7eee61e675718610102565b610177610211366004611490565b610c83565b610229610224366004611288565b610dbb565b60405161010c9190611547565b610249610244366004611288565b610e5d565b604051901515815260200161010c565b610128610267366004611307565b610ef1565b61017761027a366004611288565b610fb9565b600061028a82610dbb565b80602001905181019061029d919061155a565b92915050565b6102ce82826040516020016102ba91815260200190565b604051602081830303815290604052610880565b5050565b600254604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa158015610342573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103889190810190611573565b905090565b60015473ffffffffffffffffffffffffffffffffffffffff163314610413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e45520000000000000000000000000060448201526064015b60405180910390fd5b60008181526004602052604080822090516003916104309161166c565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff16146106f5576000818152600460205260409081902090516003916104799161166c565b908152604051908190036020018120547f4cc8221500000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff1690634cc82215906104db90849060040190815260200190565b600060405180830381600087803b1580156104f557600080fd5b505af1158015610509573d6000803e3d6000fd5b50506002546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b15801561057957600080fd5b505af115801561058d573d6000803e3d6000fd5b50505060008281526004602052604081206105a99250906111a8565b60005b60055481101561066957600581815481106105c9576105c961173e565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b15801561063e57600080fd5b505af1158015610652573d6000803e3d6000fd5b5050505080806106619061176d565b9150506105ac565b506000546040517fd803064a0000000000000000000000000000000000000000000000000000000081523060048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063d803064a90604401600060405180830381600087803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b505050505b50565b60015473ffffffffffffffffffffffffffffffffffffffff163314610779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015260640161040a565b6107a3817f4ede9a2d00000000000000000000000000000000000000000000000000000000610fe5565b610809576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f476976656e2061646472657373206973206e6f7420616e20696e64657865722e604482015260640161040a565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff163314610901576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015260640161040a565b6002546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b15801561096d57600080fd5b505af1158015610981573d6000803e3d6000fd5b505050600083815260046020908152604090912083516109a6935090918401906111e2565b50600073ffffffffffffffffffffffffffffffffffffffff166003826040516109cf91906117cc565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1603610a8857604051610a0690611266565b604051809103906000f080158015610a22573d6000803e3d6000fd5b50600382604051610a3391906117cc565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911790555b600381604051610a9891906117cc565b908152604051908190036020018120547f1003e2d200000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff1690631003e2d290610afa90859060040190815260200190565b600060405180830381600087803b158015610b1457600080fd5b505af1158015610b28573d6000803e3d6000fd5b5050505060005b600554811015610bf25760058181548110610b4c57610b4c61173e565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b83890610bad90869086906004016117e8565b600060405180830381600087803b158015610bc757600080fd5b505af1158015610bdb573d6000803e3d6000fd5b505050508080610bea9061176d565b915050610b2f565b506000546040517faf104e4000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063af104e4090610c4d90309086908690600401611801565b600060405180830381600087803b158015610c6757600080fd5b505af1158015610c7b573d6000803e3d6000fd5b505050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff16600383604051610cad91906117cc565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1603610cec57505060408051600081526020810190915290565b600382604051610cfc91906117cc565b90815260408051918290036020018220547f410d59cc000000000000000000000000000000000000000000000000000000008352905173ffffffffffffffffffffffffffffffffffffffff9091169163410d59cc9160048083019260009291908290030181865afa158015610d75573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261029d9190810190611573565b6000818152600460205260409020805460609190610dd890611619565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0490611619565b8015610e515780601f10610e2657610100808354040283529160200191610e51565b820191906000526020600020905b815481529060010190602001808311610e3457829003601f168201915b50505050509050919050565b6002546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610ecd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029d919061183f565b60015473ffffffffffffffffffffffffffffffffffffffff163314610f72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e455200000000000000000000000000604482015260640161040a565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b606061029d82604051602001610fd191815260200190565b604051602081830303815290604052610c83565b6000610ff083611008565b80156110015750611001838361106c565b9392505050565b6000611034827f01ffc9a70000000000000000000000000000000000000000000000000000000061106c565b801561029d5750611065827fffffffff0000000000000000000000000000000000000000000000000000000061106c565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff871690617530906111269086906117cc565b6000604051808303818686fa925050503d8060008114611162576040519150601f19603f3d011682016040523d82523d6000602084013e611167565b606091505b5091509150602081511015611182576000935050505061029d565b81801561119e57508080602001905181019061119e919061183f565b9695505050505050565b5080546111b490611619565b6000825580601f106111c4575050565b601f0160209004906000526020600020908101906106f59190611273565b8280546111ee90611619565b90600052602060002090601f0160209004810192826112105760008555611256565b82601f1061122957805160ff1916838001178555611256565b82800160010185558215611256579182015b8281111561125657825182559160200191906001019061123b565b50611262929150611273565b5090565b61040f8061186283390190565b5b808211156112625760008155600101611274565b60006020828403121561129a57600080fd5b5035919050565b600080604083850312156112b457600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156112fb578351835292840192918401916001016112df565b50909695505050505050565b60006020828403121561131957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461100157600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156113b3576113b361133d565b604052919050565b600082601f8301126113cc57600080fd5b813567ffffffffffffffff8111156113e6576113e661133d565b61141760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161136c565b81815284602083860101111561142c57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561145c57600080fd5b82359150602083013567ffffffffffffffff81111561147a57600080fd5b611486858286016113bb565b9150509250929050565b6000602082840312156114a257600080fd5b813567ffffffffffffffff8111156114b957600080fd5b6114c5848285016113bb565b949350505050565b60005b838110156114e85781810151838201526020016114d0565b838111156114f7576000848401525b50505050565b600081518084526115158160208601602086016114cd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061100160208301846114fd565b60006020828403121561156c57600080fd5b5051919050565b6000602080838503121561158657600080fd5b825167ffffffffffffffff8082111561159e57600080fd5b818501915085601f8301126115b257600080fd5b8151818111156115c4576115c461133d565b8060051b91506115d584830161136c565b81815291830184019184810190888411156115ef57600080fd5b938501935b8385101561160d578451825293850193908501906115f4565b98975050505050505050565b600181811c9082168061162d57607f821691505b602082108103611666577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080835481600182811c91508083168061168857607f831692505b602080841082036116c0577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b8180156116d4576001811461170357611730565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00861689528489019650611730565b60008a81526020902060005b868110156117285781548b82015290850190830161170f565b505084890196505b509498975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600082516117de8184602087016114cd565b9190910192915050565b8281526040602082015260006114c560408301846114fd565b73ffffffffffffffffffffffffffffffffffffffff8416815282602082015260606040820152600061183660608301846114fd565b95945050505050565b60006020828403121561185157600080fd5b8151801515811461100157600080fdfe608060405234801561001057600080fd5b506103ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634cc82215116100505780634cc822151461009f578063949d225d146100b2578063cccf7a8e146100c357600080fd5b80631003e2d21461006c578063410d59cc14610081575b600080fd5b61007f61007a3660046102e9565b6100e6565b005b610089610138565b6040516100969190610302565b60405180910390f35b61007f6100ad3660046102e9565b610190565b600054604051908152602001610096565b6100d66100d13660046102e9565b610286565b6040519015158152602001610096565b6100ef81610286565b156100f75750565b600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b6060600080548060200260200160405190810160405280929190818152602001828054801561018657602002820191906000526020600020905b815481526020019060010190808311610172575b5050505050905090565b61019981610286565b6101a05750565b600080546101b090600190610346565b815481106101c0576101c0610384565b906000526020600020015460006001600084815260200190815260200160002054815481106101f1576101f1610384565b6000918252602080832090910192909255828152600191829052604081205481549092919081908490811061022857610228610384565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061026d5761026d6103b3565b6001900381819060005260206000200160009055905550565b60008054810361029857506000919050565b60008281526001602052604081205490036102d45781600080815481106102c1576102c1610384565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b6000602082840312156102fb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561033a5783518352928401929184019160010161031e565b50909695505050505050565b60008282101561037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c634300080d000aa164736f6c634300080d000a608060405234801561001057600080fd5b506103ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634cc82215116100505780634cc822151461009f578063949d225d146100b2578063cccf7a8e146100c357600080fd5b80631003e2d21461006c578063410d59cc14610081575b600080fd5b61007f61007a3660046102e9565b6100e6565b005b610089610138565b6040516100969190610302565b60405180910390f35b61007f6100ad3660046102e9565b610190565b600054604051908152602001610096565b6100d66100d13660046102e9565b610286565b6040519015158152602001610096565b6100ef81610286565b156100f75750565b600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b6060600080548060200260200160405190810160405280929190818152602001828054801561018657602002820191906000526020600020905b815481526020019060010190808311610172575b5050505050905090565b61019981610286565b6101a05750565b600080546101b090600190610346565b815481106101c0576101c0610384565b906000526020600020015460006001600084815260200190815260200160002054815481106101f1576101f1610384565b6000918252602080832090910192909255828152600191829052604081205481549092919081908490811061022857610228610384565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061026d5761026d6103b3565b6001900381819060005260206000200160009055905550565b60008054810361029857506000919050565b60008281526001602052604081205490036102d45781600080815481106102c1576102c1610384565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b6000602082840312156102fb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561033a5783518352928401929184019160010161031e565b50909695505050505050565b60008282101561037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c634300080d000a";

type DamageComponentConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: DamageComponentConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class DamageComponent__factory extends ContractFactory {
  constructor(...args: DamageComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DamageComponent";
  }

  deploy(world: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<DamageComponent> {
    return super.deploy(world, overrides || {}) as Promise<DamageComponent>;
  }
  getDeployTransaction(world: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  attach(address: string): DamageComponent {
    return super.attach(address) as DamageComponent;
  }
  connect(signer: Signer): DamageComponent__factory {
    return super.connect(signer) as DamageComponent__factory;
  }
  static readonly contractName: "DamageComponent";
  public readonly contractName: "DamageComponent";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DamageComponentInterface {
    return new utils.Interface(_abi) as DamageComponentInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DamageComponent {
    return new Contract(address, _abi, signerOrProvider) as DamageComponent;
  }
}
