/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PositionComponent, PositionComponentInterface } from "../PositionComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "y",
            type: "int64",
          },
        ],
        internalType: "struct Position",
        name: "value",
        type: "tuple",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "y",
            type: "int64",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "indexer",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "y",
            type: "int64",
          },
        ],
        internalType: "struct Position",
        name: "value",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023093803806200230983398101604081905262000034916200014f565b600080546001600160a01b0319166001600160a01b038316908117909155819063f303477030620000827f9fd13393f79d456b5576524d587e4a06179883b8b00a602de30c5b507ee97e5f90565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015620000c957600080fd5b505af1158015620000de573d6000803e3d6000fd5b50505050604051620000f09062000141565b604051809103906000f0801580156200010d573d6000803e3d6000fd5b50600280546001600160a01b03929092166001600160a01b0319928316179055600180549091163317905550620001819050565b61040f8062001efa83390190565b6000602082840312156200016257600080fd5b81516001600160a01b03811681146200017a57600080fd5b9392505050565b611d6980620001916000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638b2829471161008c578063b361be4611610066578063b361be4614610236578063b8bc073d14610249578063cccf7a8e14610269578063f2fde38b1461028c57600080fd5b80638b282947146101d55780638da5cb5b146101e8578063ab9dbd071461020857600080fd5b806330b67baa116100c857806330b67baa1461016257806331b933b9146101a75780634cc82215146101af57806375c0669c146101c257600080fd5b80630f9c46fd146100ef5780630ff4c916146101185780632f7198461461014d575b600080fd5b6101026100fd3660046112f1565b61029f565b60405161010f919061130d565b60405180910390f35b61012b610126366004611351565b6102cf565b604080518251600790810b8252602093840151900b928101929092520161010f565b61016061015b36600461136a565b610322565b005b6000546101829073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010f565b61010261034f565b6101606101bd366004611351565b61040a565b6101606101d0366004611397565b610775565b6101606101e33660046114d9565b6108fd565b6001546101829073ffffffffffffffffffffffffffffffffffffffff1681565b6040517f9fd13393f79d456b5576524d587e4a06179883b8b00a602de30c5b507ee97e5f815260200161010f565b610102610244366004611520565b610d00565b61025c610257366004611351565b610e38565b60405161010f91906115d7565b61027c610277366004611351565b610eda565b604051901515815260200161010f565b61016061029a366004611397565b610f6e565b60606102c9826040516020016102b591906115f9565b604051602081830303815290604052610d00565b92915050565b60408051808201909152600080825260208201526000806102ef84610e38565b806020019051810190610302919061162b565b60408051808201909152600792830b8152910b6020820152949350505050565b61034b828260405160200161033791906115f9565b6040516020818303038152906040526108fd565b5050565b600254604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609273ffffffffffffffffffffffffffffffffffffffff169163410d59cc9160048083019260009291908290030181865afa1580156103bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104059190810190611665565b905090565b60015473ffffffffffffffffffffffffffffffffffffffff163314610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e45520000000000000000000000000060448201526064015b60405180910390fd5b60008181526004602052604080822090516003916104ad91611758565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1614610772576000818152600460205260409081902090516003916104f691611758565b908152604051908190036020018120547f4cc8221500000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff1690634cc822159061055890849060040190815260200190565b600060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b50506002546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff9091169250634cc822159150602401600060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b50505060008281526004602052604081206106269250906111f9565b60005b6005548110156106e657600581815481106106465761064661182a565b6000918252602090912001546040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b1580156106bb57600080fd5b505af11580156106cf573d6000803e3d6000fd5b5050505080806106de90611859565b915050610629565b506000546040517fd803064a0000000000000000000000000000000000000000000000000000000081523060048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063d803064a90604401600060405180830381600087803b15801561075957600080fd5b505af115801561076d573d6000803e3d6000fd5b505050505b50565b60015473ffffffffffffffffffffffffffffffffffffffff1633146107f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006044820152606401610487565b610820817f4ede9a2d00000000000000000000000000000000000000000000000000000000611036565b610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f476976656e2061646472657373206973206e6f7420616e20696e64657865722e6044820152606401610487565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff16331461097e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006044820152606401610487565b6002546040517f1003e2d20000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff90911690631003e2d290602401600060405180830381600087803b1580156109ea57600080fd5b505af11580156109fe573d6000803e3d6000fd5b50505060008381526004602090815260409091208351610a2393509091840190611233565b50600073ffffffffffffffffffffffffffffffffffffffff16600382604051610a4c91906118b8565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1603610b0557604051610a83906112b7565b604051809103906000f080158015610a9f573d6000803e3d6000fd5b50600382604051610ab091906118b8565b908152604051908190036020019020805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911790555b600381604051610b1591906118b8565b908152604051908190036020018120547f1003e2d200000000000000000000000000000000000000000000000000000000825273ffffffffffffffffffffffffffffffffffffffff1690631003e2d290610b7790859060040190815260200190565b600060405180830381600087803b158015610b9157600080fd5b505af1158015610ba5573d6000803e3d6000fd5b5050505060005b600554811015610c6f5760058181548110610bc957610bc961182a565b6000918252602090912001546040517f0216b83800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690630216b83890610c2a90869086906004016118d4565b600060405180830381600087803b158015610c4457600080fd5b505af1158015610c58573d6000803e3d6000fd5b505050508080610c6790611859565b915050610bac565b506000546040517faf104e4000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063af104e4090610cca903090869086906004016118ed565b600060405180830381600087803b158015610ce457600080fd5b505af1158015610cf8573d6000803e3d6000fd5b505050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff16600383604051610d2a91906118b8565b9081526040519081900360200190205473ffffffffffffffffffffffffffffffffffffffff1603610d6957505060408051600081526020810190915290565b600382604051610d7991906118b8565b90815260408051918290036020018220547f410d59cc000000000000000000000000000000000000000000000000000000008352905173ffffffffffffffffffffffffffffffffffffffff9091169163410d59cc9160048083019260009291908290030181865afa158015610df2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102c99190810190611665565b6000818152600460205260409020805460609190610e559061170b565b80601f0160208091040260200160405190810160405280929190818152602001828054610e819061170b565b8015610ece5780601f10610ea357610100808354040283529160200191610ece565b820191906000526020600020905b815481529060010190602001808311610eb157829003601f168201915b50505050509050919050565b6002546040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810183905260009173ffffffffffffffffffffffffffffffffffffffff169063cccf7a8e90602401602060405180830381865afa158015610f4a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c9919061192b565b60015473ffffffffffffffffffffffffffffffffffffffff163314610fef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006044820152606401610487565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600061104183611059565b8015611052575061105283836110bd565b9392505050565b6000611085827f01ffc9a7000000000000000000000000000000000000000000000000000000006110bd565b80156102c957506110b6827fffffffff000000000000000000000000000000000000000000000000000000006110bd565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff871690617530906111779086906118b8565b6000604051808303818686fa925050503d80600081146111b3576040519150601f19603f3d011682016040523d82523d6000602084013e6111b8565b606091505b50915091506020815110156111d357600093505050506102c9565b8180156111ef5750808060200190518101906111ef919061192b565b9695505050505050565b5080546112059061170b565b6000825580601f10611215575050565b601f01602090049060005260206000209081019061077291906112c4565b82805461123f9061170b565b90600052602060002090601f01602090048101928261126157600085556112a7565b82601f1061127a57805160ff19168380011785556112a7565b828001600101855582156112a7579182015b828111156112a757825182559160200191906001019061128c565b506112b39291506112c4565b5090565b61040f8061194e83390190565b5b808211156112b357600081556001016112c5565b6000604082840312156112eb57600080fd5b50919050565b60006040828403121561130357600080fd5b61105283836112d9565b6020808252825182820181905260009190848201906040850190845b8181101561134557835183529284019291840191600101611329565b50909695505050505050565b60006020828403121561136357600080fd5b5035919050565b6000806060838503121561137d57600080fd5b8235915061138e84602085016112d9565b90509250929050565b6000602082840312156113a957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461105257600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611443576114436113cd565b604052919050565b600082601f83011261145c57600080fd5b813567ffffffffffffffff811115611476576114766113cd565b6114a760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016113fc565b8181528460208386010111156114bc57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156114ec57600080fd5b82359150602083013567ffffffffffffffff81111561150a57600080fd5b6115168582860161144b565b9150509250929050565b60006020828403121561153257600080fd5b813567ffffffffffffffff81111561154957600080fd5b6115558482850161144b565b949350505050565b60005b83811015611578578181015183820152602001611560565b83811115611587576000848401525b50505050565b600081518084526115a581602086016020860161155d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611052602083018461158d565b8060070b811461077257600080fd5b604081018235611608816115ea565b60070b8252602083013561161b816115ea565b8060070b60208401525092915050565b6000806040838503121561163e57600080fd5b8251611649816115ea565b602084015190925061165a816115ea565b809150509250929050565b6000602080838503121561167857600080fd5b825167ffffffffffffffff8082111561169057600080fd5b818501915085601f8301126116a457600080fd5b8151818111156116b6576116b66113cd565b8060051b91506116c78483016113fc565b81815291830184019184810190888411156116e157600080fd5b938501935b838510156116ff578451825293850193908501906116e6565b98975050505050505050565b600181811c9082168061171f57607f821691505b6020821081036112eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080835481600182811c91508083168061177457607f831692505b602080841082036117ac577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b8180156117c057600181146117ef5761181c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952848901965061181c565b60008a81526020902060005b868110156118145781548b8201529085019083016117fb565b505084890196505b509498975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600082516118ca81846020870161155d565b9190910192915050565b828152604060208201526000611555604083018461158d565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000611922606083018461158d565b95945050505050565b60006020828403121561193d57600080fd5b8151801515811461105257600080fdfe608060405234801561001057600080fd5b506103ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634cc82215116100505780634cc822151461009f578063949d225d146100b2578063cccf7a8e146100c357600080fd5b80631003e2d21461006c578063410d59cc14610081575b600080fd5b61007f61007a3660046102e9565b6100e6565b005b610089610138565b6040516100969190610302565b60405180910390f35b61007f6100ad3660046102e9565b610190565b600054604051908152602001610096565b6100d66100d13660046102e9565b610286565b6040519015158152602001610096565b6100ef81610286565b156100f75750565b600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b6060600080548060200260200160405190810160405280929190818152602001828054801561018657602002820191906000526020600020905b815481526020019060010190808311610172575b5050505050905090565b61019981610286565b6101a05750565b600080546101b090600190610346565b815481106101c0576101c0610384565b906000526020600020015460006001600084815260200190815260200160002054815481106101f1576101f1610384565b6000918252602080832090910192909255828152600191829052604081205481549092919081908490811061022857610228610384565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061026d5761026d6103b3565b6001900381819060005260206000200160009055905550565b60008054810361029857506000919050565b60008281526001602052604081205490036102d45781600080815481106102c1576102c1610384565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b6000602082840312156102fb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561033a5783518352928401929184019160010161031e565b50909695505050505050565b60008282101561037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c634300080d000aa164736f6c634300080d000a608060405234801561001057600080fd5b506103ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634cc82215116100505780634cc822151461009f578063949d225d146100b2578063cccf7a8e146100c357600080fd5b80631003e2d21461006c578063410d59cc14610081575b600080fd5b61007f61007a3660046102e9565b6100e6565b005b610089610138565b6040516100969190610302565b60405180910390f35b61007f6100ad3660046102e9565b610190565b600054604051908152602001610096565b6100d66100d13660046102e9565b610286565b6040519015158152602001610096565b6100ef81610286565b156100f75750565b600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b6060600080548060200260200160405190810160405280929190818152602001828054801561018657602002820191906000526020600020905b815481526020019060010190808311610172575b5050505050905090565b61019981610286565b6101a05750565b600080546101b090600190610346565b815481106101c0576101c0610384565b906000526020600020015460006001600084815260200190815260200160002054815481106101f1576101f1610384565b6000918252602080832090910192909255828152600191829052604081205481549092919081908490811061022857610228610384565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061026d5761026d6103b3565b6001900381819060005260206000200160009055905550565b60008054810361029857506000919050565b60008281526001602052604081205490036102d45781600080815481106102c1576102c1610384565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b6000602082840312156102fb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561033a5783518352928401929184019160010161031e565b50909695505050505050565b60008282101561037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c634300080d000a";

type PositionComponentConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: PositionComponentConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class PositionComponent__factory extends ContractFactory {
  constructor(...args: PositionComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PositionComponent";
  }

  deploy(world: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<PositionComponent> {
    return super.deploy(world, overrides || {}) as Promise<PositionComponent>;
  }
  getDeployTransaction(world: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  attach(address: string): PositionComponent {
    return super.attach(address) as PositionComponent;
  }
  connect(signer: Signer): PositionComponent__factory {
    return super.connect(signer) as PositionComponent__factory;
  }
  static readonly contractName: "PositionComponent";
  public readonly contractName: "PositionComponent";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PositionComponentInterface {
    return new utils.Interface(_abi) as PositionComponentInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PositionComponent {
    return new Contract(address, _abi, signerOrProvider) as PositionComponent;
  }
}
