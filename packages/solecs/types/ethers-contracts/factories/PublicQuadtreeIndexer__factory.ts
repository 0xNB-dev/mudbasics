/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PublicQuadtreeIndexer, PublicQuadtreeIndexerInterface } from "../PublicQuadtreeIndexer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Component",
        name: "component",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "maxPoints",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "depth",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getNode",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "maxPoints",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "depth",
            type: "uint32",
          },
          {
            internalType: "uint256[]",
            name: "points",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "children",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "cx",
                type: "int64",
              },
              {
                internalType: "int64",
                name: "cy",
                type: "int64",
              },
              {
                internalType: "uint64",
                name: "w",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "h",
                type: "uint64",
              },
              {
                internalType: "int64",
                name: "westEdge",
                type: "int64",
              },
              {
                internalType: "int64",
                name: "eastEdge",
                type: "int64",
              },
              {
                internalType: "int64",
                name: "northEdge",
                type: "int64",
              },
              {
                internalType: "int64",
                name: "southEdge",
                type: "int64",
              },
            ],
            internalType: "struct Rectangle",
            name: "bounds",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "divided",
            type: "bool",
          },
        ],
        internalType: "struct Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getPoint",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "y",
            type: "int64",
          },
          {
            internalType: "uint256",
            name: "entityID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentNode",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int64",
        name: "cx",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "cy",
        type: "int64",
      },
      {
        internalType: "uint64",
        name: "w",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "h",
        type: "uint64",
      },
    ],
    name: "initRectangle",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "cx",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "cy",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "w",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "h",
            type: "uint64",
          },
          {
            internalType: "int64",
            name: "westEdge",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "eastEdge",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "northEdge",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "southEdge",
            type: "int64",
          },
        ],
        internalType: "struct Rectangle",
        name: "rect",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "y",
            type: "int64",
          },
          {
            internalType: "uint256",
            name: "entityID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "parentNode",
            type: "uint256",
          },
        ],
        internalType: "struct Point",
        name: "point",
        type: "tuple",
      },
    ],
    name: "insert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "cx",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "cy",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "w",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "h",
            type: "uint64",
          },
          {
            internalType: "int64",
            name: "westEdge",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "eastEdge",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "northEdge",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "southEdge",
            type: "int64",
          },
        ],
        internalType: "struct Rectangle",
        name: "rect",
        type: "tuple",
      },
    ],
    name: "printRect",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "printTree",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003e6738038062003e6783398101604081905262000034916200040b565b6000600581905560048181556040805160c08101825261ffff86811680835290861660208084018290528451968752868101855283850196909652835185815260a08101909452889591949093606084019290919082016080803683375050508152602001620000c8600080620000b163ffffffff600262000478565b620000c263ffffffff600262000478565b620002a2565b815260006020918201819052600554815260028252604090819020835181548585015163ffffffff908116640100000000026001600160401b031990921692169190911717815590830151805191926200012b926001850192909101906200037e565b5060608201518051620001499160028401916020909101906200037e565b5060808281015180516003840180546020840151604085015160608601516001600160401b039586166001600160801b031994851617680100000000000000009387168402176001600160801b03908116600160801b93881684026001600160c01b0390811691909117600160c01b9389168402179096559787015160048a01805460a0808b015160c08c015160e0909c0151948b1692909816919091179689169095029590951790981696861690910290931694909417949092160292909217909155909101516005918201805460ff191691151591909117905580549060006200023583620004aa565b91905055506040516200024890620003ce565b604051809103906000f08015801562000265573d6000803e3d6000fd5b50600080546001600160a01b039283166001600160a01b031991821617909155600180549590921694169390931790925550620005c39350505050565b604080516101008101825260006080820181905260a0820181905260c0820181905260e0820152600786810b825285900b60208201526001600160401b03848116928201929092529082166060820152620002ff600284620004c6565b6200030b908662000516565b60070b608082015262000320600284620004c6565b6200032c90866200056c565b60070b60a082015262000341600283620004c6565b6200034d908562000516565b60070b60c082015262000362600283620004c6565b6200036e90856200056c565b60070b60e0820152949350505050565b828054828255906000526020600020908101928215620003bc579160200282015b82811115620003bc5782518255916020019190600101906200039f565b50620003ca929150620003dc565b5090565b61040f8062003a5883390190565b5b80821115620003ca5760008155600101620003dd565b805161ffff811681146200040657600080fd5b919050565b6000806000606084860312156200042157600080fd5b83516001600160a01b03811681146200043957600080fd5b92506200044960208501620003f3565b91506200045960408501620003f3565b90509250925092565b634e487b7160e01b600052601160045260246000fd5b60006001600160401b0382811684821681151582840482111615620004a157620004a162000462565b02949350505050565b600060018201620004bf57620004bf62000462565b5060010190565b60008160070b8360070b80620004ec57634e487b7160e01b600052601260045260246000fd5b60016001603f1b03198214600019821416156200050d576200050d62000462565b90059392505050565b6000600782810b9084900b828112801560016001603f1b031983018412161562000544576200054462000462565b60016001603f1b038201831381161562000562576200056262000462565b5090039392505050565b6000600782810b9084900b828212801560016001603f1b03849003831316156200059a576200059a62000462565b60016001603f1b03198390038212811615620005ba57620005ba62000462565b50019392505050565b61348580620005d36000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063869f1c8e11610081578063c0ea6a561161005b578063c0ea6a5614610262578063cccf7a8e14610275578063e6b0416a1461029a57600080fd5b8063869f1c8e1461017157806394d9eb121461022f578063b361be461461024f57600080fd5b80634cc82215116100b25780634cc822151461012b5780634f0f4aa91461013e57806360ae32d61461015e57600080fd5b806301ffc9a7146100d95780630216b8381461010157806331b933b914610116575b600080fd5b6100ec6100e73660046129ee565b6102ad565b60405190151581526020015b60405180910390f35b61011461010f366004612b66565b610346565b005b61011e610354565b6040516100f89190612bad565b610114610139366004612bf1565b61040e565b61015161014c366004612bf1565b61041a565b6040516100f89190612cb8565b61011461016c366004612bf1565b610626565b6101f161017f366004612bf1565b604080516080808201835260008083526020808401829052838501829052606093840182905294815260038552839020835191820184528054600781810b845268010000000000000000909104900b948201949094526001840154928101929092526002909201549181019190915290565b6040516100f891906000608082019050825160070b8252602083015160070b6020830152604083015160408301526060830151606083015292915050565b61024261023d366004612d9b565b610a17565b6040516100f89190612df7565b61011e61025d366004612e06565b610a6d565b610114610270366004612e43565b610b59565b6100ec610283366004612bf1565b600090815260036020526040902060010154151590565b6100ec6102a8366004612eeb565b610e51565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000148061034057507fffffffff0000000000000000000000000000000000000000000000000000000082167f4ede9a2d00000000000000000000000000000000000000000000000000000000145b92915050565b6103508282610e64565b5050565b60008054604080517f410d59cc000000000000000000000000000000000000000000000000000000008152905160609373ffffffffffffffffffffffffffffffffffffffff9093169263410d59cc92600480820193918290030181865afa1580156103c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104099190810190612f9c565b905090565b61041781610ee3565b50565b61048e6040805160c08082018352600080835260208084018290526060848601819052808501819052855161010081018752838152918201839052948101829052938401819052608084810182905260a0850182905291840181905260e08401529091908201908152600060209091015290565b600082815260026020908152604091829020825160c081018452815463ffffffff808216835264010000000090910416818401526001820180548551818602810186018752818152929593949386019383018282801561050d57602002820191906000526020600020905b8154815260200190600101908083116104f9575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561056557602002820191906000526020600020905b815481526020019060010190808311610551575b505050918352505060408051610100810182526003840154600781810b835268010000000000000000808304820b60208086019190915270010000000000000000000000000000000080850467ffffffffffffffff90811687890152780100000000000000000000000000000000000000000000000095869004166060870152600489015480850b6080880152928304840b60a08701528204830b60c0860152929004900b60e083015283015260059092015460ff16151591015292915050565b6000818152600260209081526040808320815160c081018352815463ffffffff808216835264010000000090910416818501526001820180548451818702810187018652818152929593948601938301828280156106a357602002820191906000526020600020905b81548152602001906001019080831161068f575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156106fb57602002820191906000526020600020905b8154815260200190600101908083116106e7575b505050918352505060408051610100810182526003840154600781810b835268010000000000000000808304820b60208086019190915270010000000000000000000000000000000080850467ffffffffffffffff908116878901527801000000000000000000000000000000000000000000000000958690041660608088019190915260048a015480860b6080890152938404850b60a0880152908304840b60c08701529390910490910b60e08401528085019290925260059094015460ff161515928201929092528051928301905260228083529293506107f792906134579083013983836020015163ffffffff16846040015151611150565b6108356040518060400160405280600981526020017f4368696c6472656e3a00000000000000000000000000000000000000000000008152506111eb565b6108926040518060400160405280600681526020017f4e573a2025730000000000000000000000000000000000000000000000000000815250826060015160008151811061088557610885613042565b602002602001015161127a565b6108e26040518060400160405280600681526020017f4e453a2025730000000000000000000000000000000000000000000000000000815250826060015160018151811061088557610885613042565b6109326040518060400160405280600681526020017f53453a2025730000000000000000000000000000000000000000000000000000815250826060015160028151811061088557610885613042565b6109826040518060400160405280600681526020017f53573a2025730000000000000000000000000000000000000000000000000000815250826060015160038151811061088557610885613042565b6109c06040518060400160405280601881526020017f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d00000000000000008152506111eb565b8060a00151156103505760005b816060015151811015610a1257610a00826060015182815181106109f3576109f3613042565b6020026020010151610626565b80610a0a816130a0565b9150506109cd565b505050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152610a648585858561130b565b95945050505050565b6060600082806020019051810190610a8591906130ee565b90506000610a9f60045483610a9a60006113d8565b611416565b90506000610aac82515190565b905060008167ffffffffffffffff811115610ac957610ac9612a30565b604051908082528060200260200182016040528015610af2578160200160208202803683370190505b50905060005b82811015610b4f5760036000610b0e86846116ae565b815260200190815260200160002060010154828281518110610b3257610b32613042565b602090810291909101015280610b47816130a0565b915050610af8565b5095945050505050565b610b976040518060400160405280601281526020017f52656374616e676c65202d2d2d2d2d2d2d2d00000000000000000000000000008152506111eb565b610bd56040518060400160405280600881526020017f43656e74657220580000000000000000000000000000000000000000000000008152506111eb565b8051610be39060070b6116c8565b610c216040518060400160405280600881526020017f43656e74657220590000000000000000000000000000000000000000000000008152506111eb565b610c31816020015160070b6116c8565b610c6f6040518060400160405280600581526020017f57696474680000000000000000000000000000000000000000000000000000008152506111eb565b610c86816040015167ffffffffffffffff16611759565b610cc46040518060400160405280600681526020017f48656967687400000000000000000000000000000000000000000000000000008152506111eb565b610cdb816060015167ffffffffffffffff16611759565b610d196040518060400160405280600981526020017f57657374204564676500000000000000000000000000000000000000000000008152506111eb565b610d29816080015160070b6116c8565b610d676040518060400160405280600981526020017f45617374204564676500000000000000000000000000000000000000000000008152506111eb565b610d778160a0015160070b6116c8565b610db56040518060400160405280600a81526020017f4e6f7274682045646765000000000000000000000000000000000000000000008152506111eb565b610dc58160c0015160070b6116c8565b610e036040518060400160405280600a81526020017f536f7574682045646765000000000000000000000000000000000000000000008152506111eb565b610e138160e0015160070b6116c8565b6104176040518060400160405280601381526020017f2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d000000000000000000000000008152506111eb565b6000610e5d83836117ea565b9392505050565b60008082806020019051810190610e7b919061318a565b60408051608081018252600784810b825283900b6020820152908101879052600060608201529193509150610ec185600090815260036020526040902060010154151590565b15610ecf57610ecf85610ee3565b610edb600454826117ea565b505050505050565b600081815260036020526040902060010154610f5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f456e74697479206973206e6f7420696e2051756164747265652e000000000000604482015260640160405180910390fd5b60008181526003602090815260408083206002908101548085529083528184206001018054835181860281018601909452808452919493909190830182828015610fc857602002820191906000526020600020905b815481526020019060010190808311610fb4575b5093945060009350610fd992505050565b604051908082528060200260200182016040528015611002578160200160208202803683370190505b5060026000848152602001908152602001600020600101908051906020019061102c92919061298e565b5060005b81518110156110b3578382828151811061104c5761104c613042565b6020026020010151146110a1576002600084815260200190815260200160002060010182828151811061108157611081613042565b602090810291909101810151825460018101845560009384529190922001555b806110ab816130a0565b915050611030565b50600083815260036020526040808220600101829055905490517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff90911690634cc8221590602401600060405180830381600087803b15801561113357600080fd5b505af1158015611147573d6000803e3d6000fd5b50505050505050565b6111e58484848460405160240161116a949392919061322f565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f08ee566600000000000000000000000000000000000000000000000000000000179052611aed565b50505050565b610417816040516024016111ff919061325e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052611aed565b6103508282604051602401611290929190613271565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d000000000000000000000000000000000000000000000000000000000179052611aed565b604080516101008101825260006080820181905260a0820181905260c0820181905260e0820152600786810b825285900b602082015267ffffffffffffffff8481169282019290925290821660608201526113676002846132c2565b6113719086613336565b60070b60808201526113846002846132c2565b61138e908661339f565b60070b60a08201526113a16002836132c2565b6113ab9085613336565b60070b60c08201526113be6002836132c2565b6113c8908561339f565b60070b60e0820152949350505050565b600080611401836000604051905060208260020102810160405281816020015260008152919050565b60408051918252805160200190529392505050565b60008381526002602090815260408083208151610100810183526003820154600781810b835268010000000000000000808304820b9684019690965267ffffffffffffffff70010000000000000000000000000000000080840482169685019690965278010000000000000000000000000000000000000000000000009283900416606084015260049093015480840b6080840152948504830b60a0830152928404820b60c08201529190920490910b60e08201526114d59084611b0e565b6114e0575080610e5d565b60005b60008581526002602052604090206001015481101561162e57600085815260026020526040812060010180546115879287926003928690811061152857611528613042565b60009182526020808320909101548352828101939093526040918201902081516080810183528154600781810b835268010000000000000000909104900b93810193909352600181015491830191909152600201546060820152611b71565b80156115d55750600085815260026020526040812060010180546003918391859081106115b6576115b6613042565b9060005260206000200154815260200190815260200160002060010154115b1561161c576000858152600260205260409020600101805461161c91908390811061160257611602613042565b906000526020600020015484611bd890919063ffffffff16565b80611626816130a0565b9150506114e3565b5060008481526002602052604090206005015460ff16156116a75760005b60048110156116a55761169160026000878152602001908152602001600020600201828154811061167f5761167f613042565b90600052602060002001548585611416565b92508061169d816130a0565b91505061164c565b505b5092915050565b6000610e5d826116bc855190565b90600201602002015190565b610417816040516024016116de91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f4e0c1d1d00000000000000000000000000000000000000000000000000000000179052611aed565b6104178160405160240161176f91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff5b1bba900000000000000000000000000000000000000000000000000000000179052611aed565b60008281526002602090815260408083208151610100810183526003820154600781810b835268010000000000000000808304820b9684019690965267ffffffffffffffff70010000000000000000000000000000000080840482169685019690965278010000000000000000000000000000000000000000000000009283900416606084015260049093015480840b6080840152948504830b60a0830152928404820b60c08201529190920490910b60e08201526118a99083611b71565b6118b557506000610340565b6000838152600260205260409020805460019091015463ffffffff9091161115611a035760008381526002602081815260408084208682018051600192830180548085018255908852858820015560608801898152815187526003855283872089518154968b015167ffffffffffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffff000000000000000000000000000000009098169116179590951785559051918401829055519290930191909155915491517f1003e2d200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921691631003e2d2916119c89160040190815260200190565b600060405180830381600087803b1580156119e257600080fd5b505af11580156119f6573d6000803e3d6000fd5b5050505060019050610340565b60008381526002602052604090206005015460ff16611a2557611a2583611be4565b60008381526002602081905260408220018054611a5a9290611a4957611a49613042565b9060005260206000200154836117ea565b80611a8b5750611a8b60026000858152602001908152602001600020600201600181548110611a4957611a49613042565b80611abc5750611abc60026000858152602001908152602001600020600201600281548110611a4957611a49613042565b80610e5d5750610e5d60026000858152602001908152602001600020600201600381548110611a4957611a49613042565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60008260a0015160070b826080015160070b1380611b395750826080015160070b8260a0015160070b125b80611b5157508260e0015160070b8260c0015160070b135b80611b6957508260c0015160070b8260e0015160070b125b159392505050565b6000826080015160070b826000015160070b12158015611b9e57508260a0015160070b826000015160070b125b8015611bb857508260c0015160070b826020015160070b12155b8015610e5d57508260e0015160070b826020015160070b12905092915050565b610350828260006128ac565b6000818152600260208190526040822060030154600781810b9368010000000000000000830490910b929091611c389190700100000000000000000000000000000000900467ffffffffffffffff16613407565b60008581526002602081905260408220600301549293509091611c8191907801000000000000000000000000000000000000000000000000900467ffffffffffffffff16613407565b6040805160c0810182526000888152600260208181529382205463ffffffff8082168552928b9052908452939450909291830191611cca9164010000000090910416600161342e565b63ffffffff1681526020016000604051908082528060200260200182016040528015611d00578160200160208202803683370190505b50815260408051600480825260a0820190925260209283019290919082016080803683375050508152602001611d60611d3a6002866132c2565b611d449088613336565b611d4f6002866132c2565b611d599088613336565b868661130b565b815260006020918201819052600554815260028252604090819020835181548585015163ffffffff908116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009092169216919091171781559083015180519192611dd99260018501929091019061298e565b5060608201518051611df591600284019160209091019061298e565b506080828101518051600384018054602080850151604080870151606088015167ffffffffffffffff9788167fffffffffffffffffffffffffffffffff0000000000000000000000000000000096871617680100000000000000009489168502176fffffffffffffffffffffffffffffffff908116700100000000000000000000000000000000938a16840277ffffffffffffffffffffffffffffffffffffffffffffffff908116919091177801000000000000000000000000000000000000000000000000938b168402179098559989015160048c01805460a0808d015160c08e015160e0909e0151948d1692909a1691909117988b1690960297909717909a1698881690910290951696909617969094169092029490941790935590930151600592830180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691151591909117905590546000888152600292839052928320909101805491929091611f6d57611f6d613042565b60009182526020822001919091556005805491611f89836130a0565b90915550506040805160c0810182526000878152600260208181529382205463ffffffff8082168552928a90529084529192830191611fd39164010000000090910416600161342e565b63ffffffff1681526020016000604051908082528060200260200182016040528015612009578160200160208202803683370190505b50815260408051600480825260a082019092526020928301929091908201608080368337505050815260200161204d6120436002866132c2565b611d44908861339f565b815260006020918201819052600554815260028252604090819020835181548585015163ffffffff908116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090921692169190911717815590830151805191926120c69260018501929091019061298e565b50606082015180516120e291600284019160209091019061298e565b506080828101518051600384018054602080850151604080870151606088015167ffffffffffffffff9788167fffffffffffffffffffffffffffffffff0000000000000000000000000000000096871617680100000000000000009489168502176fffffffffffffffffffffffffffffffff908116700100000000000000000000000000000000938a16840277ffffffffffffffffffffffffffffffffffffffffffffffff908116919091177801000000000000000000000000000000000000000000000000938b168402179098559989015160048c01805460a0808d015160c08e015160e0909e0151948d1692909a1691909117988b1690960297909717909a1698881690910290951696909617969094169092029490941790935590930151600592830180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790559054600088815260029283905292909220018054600190811061225a5761225a613042565b60009182526020822001919091556005805491612276836130a0565b90915550506040805160c0810182526000878152600260208181529382205463ffffffff8082168552928a905290845291928301916122c09164010000000090910416600161342e565b63ffffffff16815260200160006040519080825280602002602001820160405280156122f6578160200160208202803683370190505b50815260408051600480825260a082019092526020928301929091908201608080368337505050815260200161234f6123306002866132c2565b61233a908861339f565b6123456002866132c2565b611d59908861339f565b815260006020918201819052600554815260028252604090819020835181548585015163ffffffff908116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090921692169190911717815590830151805191926123c89260018501929091019061298e565b50606082015180516123e491600284019160209091019061298e565b506080828101518051600384018054602080850151604080870151606088015167ffffffffffffffff9788167fffffffffffffffffffffffffffffffff0000000000000000000000000000000096871617680100000000000000009489168502176fffffffffffffffffffffffffffffffff908116700100000000000000000000000000000000938a16840277ffffffffffffffffffffffffffffffffffffffffffffffff908116919091177801000000000000000000000000000000000000000000000000938b168402179098559989015160048c01805460a0808d015160c08e015160e0909e0151948d1692909a1691909117988b1690960297909717909a1698881690910290951696909617969094169092029490941790935590930151600592830180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055905460008881526002928390529290922081018054909190811061255d5761255d613042565b60009182526020822001919091556005805491612579836130a0565b90915550506040805160c0810182526000878152600260208181529382205463ffffffff8082168552928a905290845291928301916125c39164010000000090910416600161342e565b63ffffffff16815260200160006040519080825280602002602001820160405280156125f9578160200160208202803683370190505b50815260408051600480825260a082019092526020928301929091908201608080368337505050815260200161263d6126336002866132c2565b61233a9088613336565b815260006020918201819052600554815260028252604090819020835181548585015163ffffffff908116640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000090921692169190911717815590830151805191926126b69260018501929091019061298e565b50606082015180516126d291600284019160209091019061298e565b50608082810151805160038481018054602080860151604080880151606089015167ffffffffffffffff9889167fffffffffffffffffffffffffffffffff000000000000000000000000000000009687161768010000000000000000948a168502176fffffffffffffffffffffffffffffffff908116700100000000000000000000000000000000938b16840277ffffffffffffffffffffffffffffffffffffffffffffffff908116919091177801000000000000000000000000000000000000000000000000938c168402179098559a8a015160048d01805460a0808e015160c08f015160e0909f0151948e1692909a1691909117988c1690960297909717909b16998916909102909516979097179790951690920295909517909455940151600593840180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055915460008981526002928390529290922001805491929091811061284b5761284b613042565b60009182526020822001919091556005805491612867836130a0565b909155505050600093845250506002602052506040902060050180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60006128c283836128bb875190565b91906128ca565b909352505050565b60208301518351600091859114600181146128f75784602087516002010287015285516001018652612985565b60208651600201028601604051146001811461296057602087516002010280604051828a60045afa508681604051015260405160200151866001010160405160200152604051516001016040515260405193506040516020870260200182010160405250612983565b866020015160010187602001528560405152604051602001604052865160010187525b505b50949350505050565b8280548282559060005260206000209081019282156129c9579160200282015b828111156129c95782518255916020019190600101906129ae565b506129d59291506129d9565b5090565b5b808211156129d557600081556001016129da565b600060208284031215612a0057600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e5d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715612a8357612a83612a30565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612ad057612ad0612a30565b604052919050565b600082601f830112612ae957600080fd5b813567ffffffffffffffff811115612b0357612b03612a30565b612b3460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612a89565b818152846020838601011115612b4957600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215612b7957600080fd5b82359150602083013567ffffffffffffffff811115612b9757600080fd5b612ba385828601612ad8565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015612be557835183529284019291840191600101612bc9565b50909695505050505050565b600060208284031215612c0357600080fd5b5035919050565b600081518084526020808501945080840160005b83811015612c3a57815187529582019590820190600101612c1e565b509495945050505050565b805160070b8252602081015160070b6020830152604081015167ffffffffffffffff80821660408501528060608401511660608501525050608081015160070b608083015260a081015160070b60a083015260c081015160070b60c083015260e0810151610a1260e084018260070b9052565b60208152600063ffffffff8084511660208401528060208501511660408401525060408301516101a0806060850152612cf56101c0850183612c0a565b915060608501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0858403016080860152612d308382612c0a565b9250506080850151612d4560a0860182612c45565b5060a09490940151151592909301919091525090565b8060070b811461041757600080fd5b8035612d7581612d5b565b919050565b67ffffffffffffffff8116811461041757600080fd5b8035612d7581612d7a565b60008060008060808587031215612db157600080fd5b8435612dbc81612d5b565b93506020850135612dcc81612d5b565b92506040850135612ddc81612d7a565b91506060850135612dec81612d7a565b939692955090935050565b61010081016103408284612c45565b600060208284031215612e1857600080fd5b813567ffffffffffffffff811115612e2f57600080fd5b612e3b84828501612ad8565b949350505050565b60006101008284031215612e5657600080fd5b612e5e612a5f565b8235612e6981612d5b565b81526020830135612e7981612d5b565b6020820152612e8a60408401612d90565b6040820152612e9b60608401612d90565b6060820152612eac60808401612d6a565b6080820152612ebd60a08401612d6a565b60a0820152612ece60c08401612d6a565b60c0820152612edf60e08401612d6a565b60e08201529392505050565b60008082840360a0811215612eff57600080fd5b8335925060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082011215612f3357600080fd5b506040516080810181811067ffffffffffffffff82111715612f5757612f57612a30565b6040526020840135612f6881612d5b565b81526040840135612f7881612d5b565b60208201526060848101356040830152608090940135938101939093525092909150565b60006020808385031215612faf57600080fd5b825167ffffffffffffffff80821115612fc757600080fd5b818501915085601f830112612fdb57600080fd5b815181811115612fed57612fed612a30565b8060051b9150612ffe848301612a89565b818152918301840191848101908884111561301857600080fd5b938501935b838510156130365784518252938501939085019061301d565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036130d1576130d1613071565b5060010190565b8051612d7581612d5b565b8051612d7581612d7a565b6000610100828403121561310157600080fd5b613109612a5f565b825161311481612d5b565b8152602083015161312481612d5b565b6020820152613135604084016130e3565b6040820152613146606084016130e3565b6060820152613157608084016130d8565b608082015261316860a084016130d8565b60a082015261317960c084016130d8565b60c0820152612edf60e084016130d8565b6000806040838503121561319d57600080fd5b82516131a881612d5b565b60208401519092506131b981612d5b565b809150509250929050565b6000815180845260005b818110156131ea576020818501810151868301820152016131ce565b818111156131fc576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60808152600061324260808301876131c4565b6020830195909552506040810192909252606090910152919050565b602081526000610e5d60208301846131c4565b60408152600061328460408301856131c4565b90508260208301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160070b8360070b806132d9576132d9613293565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81147fffffffffffffffffffffffffffffffffffffffffffffffff80000000000000008314161561332d5761332d613071565b90059392505050565b60008160070b8360070b60008112817fffffffffffffffffffffffffffffffffffffffffffffffff80000000000000000183128115161561337957613379613071565b81677fffffffffffffff01831381161561339557613395613071565b5090039392505050565b60008160070b8360070b6000821282677fffffffffffffff038213811516156133ca576133ca613071565b827fffffffffffffffffffffffffffffffffffffffffffffffff80000000000000000382128116156133fe576133fe613071565b50019392505050565b600067ffffffffffffffff8084168061342257613422613293565b92169190910492915050565b600063ffffffff80831681851680830382111561344d5761344d613071565b0194935050505056fe4e6f64653a204944202573207c204465707468202573207c2050436f756e74202573a164736f6c634300080d000a608060405234801561001057600080fd5b506103ef806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80634cc82215116100505780634cc822151461009f578063949d225d146100b2578063cccf7a8e146100c357600080fd5b80631003e2d21461006c578063410d59cc14610081575b600080fd5b61007f61007a3660046102e9565b6100e6565b005b610089610138565b6040516100969190610302565b60405180910390f35b61007f6100ad3660046102e9565b610190565b600054604051908152602001610096565b6100d66100d13660046102e9565b610286565b6040519015158152602001610096565b6100ef81610286565b156100f75750565b600080548282526001602081905260408320829055810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b6060600080548060200260200160405190810160405280929190818152602001828054801561018657602002820191906000526020600020905b815481526020019060010190808311610172575b5050505050905090565b61019981610286565b6101a05750565b600080546101b090600190610346565b815481106101c0576101c0610384565b906000526020600020015460006001600084815260200190815260200160002054815481106101f1576101f1610384565b6000918252602080832090910192909255828152600191829052604081205481549092919081908490811061022857610228610384565b90600052602060002001548152602001908152602001600020819055506001600082815260200190815260200160002060009055600080548061026d5761026d6103b3565b6001900381819060005260206000200160009055905550565b60008054810361029857506000919050565b60008281526001602052604081205490036102d45781600080815481106102c1576102c1610384565b9060005260206000200154149050919050565b50600090815260016020526040902054151590565b6000602082840312156102fb57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561033a5783518352928401929184019160010161031e565b50909695505050505050565b60008282101561037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c634300080d000a";

type PublicQuadtreeIndexerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: PublicQuadtreeIndexerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class PublicQuadtreeIndexer__factory extends ContractFactory {
  constructor(...args: PublicQuadtreeIndexerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PublicQuadtreeIndexer";
  }

  deploy(
    component: string,
    maxPoints: BigNumberish,
    depth: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PublicQuadtreeIndexer> {
    return super.deploy(component, maxPoints, depth, overrides || {}) as Promise<PublicQuadtreeIndexer>;
  }
  getDeployTransaction(
    component: string,
    maxPoints: BigNumberish,
    depth: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(component, maxPoints, depth, overrides || {});
  }
  attach(address: string): PublicQuadtreeIndexer {
    return super.attach(address) as PublicQuadtreeIndexer;
  }
  connect(signer: Signer): PublicQuadtreeIndexer__factory {
    return super.connect(signer) as PublicQuadtreeIndexer__factory;
  }
  static readonly contractName: "PublicQuadtreeIndexer";
  public readonly contractName: "PublicQuadtreeIndexer";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PublicQuadtreeIndexerInterface {
    return new utils.Interface(_abi) as PublicQuadtreeIndexerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PublicQuadtreeIndexer {
    return new Contract(address, _abi, signerOrProvider) as PublicQuadtreeIndexer;
  }
}
